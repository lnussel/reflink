#!/bin/bash
set -e

name="${1:?}"
packages="${2:?}"
size="${3:-2G}"
osname="opensuse-tumbleweed"
arch='x86_64'
loop=
mp=$(mktemp -d -p /run -t mkimg.XXXXXXXXXX)
tmpmp=$(mktemp -d -p /run -t mkimg.XXXXXXXXXX)
layout='
label: gpt

size=100M, type=${uuid[esp]}
type=${uuid[root]}
'

#size=500M, type=${uuid[root]}
#type=${uuid[usr]}

declare -A uuid
init_uuids()
{
	while read -r n u; do
		[ "$n" = "NAME" ] && continue
		uuid[$n]=$u
	done < <(systemd-id128 show -u usr root esp swap)
}

cleanup()
{
	if [ -n "$mp" ]; then
		umount -R "$mp" || true
	fi
	if mountpoint -q "$tmpmp"; then
		umount -R "$tmpmp" || true
	fi
	if [ -n "$loop" ]; then
		losetup -d "$loop" || true
	fi
}
trap cleanup EXIT

init_uuids

eval layout="\"$layout\""

if [[ "${packages##*/}" =~ ^[0-9]+$ ]]; then
	rev="${packages##*/}"
else
	rev="$(find "$packages" -maxdepth 1 -mindepth 1 -type d -printf "%P\n"|grep -e '^[0-9]\+$'|sort -nr|head -1)"
	packages="$packages/$rev"
fi

declare -A volume
volume[root]="root-$arch:$osname"
volume[usr]="usr-$arch:$osname@$rev"
volume[sysimage]="sysimage-$arch:$osname@$rev"
volume[var]="var:$osname"

dd if=/dev/zero of="$name" bs=1 seek="$size" count=0 status=none
loop=$(losetup --show -fP "$name")
echo "$layout" | sfdisk -q "$loop"

# EFI
mkfs.vfat "${loop}p1"

mkfs.btrfs -q "${loop}p2"
mount "${loop}p2" "$tmpmp"
btrfs subvolume create "$tmpmp/@auto/"
for v in root usr sysimage var; do # keep order
	btrfs subvolume create "$tmpmp/@auto/${volume[$v]}"
done
## XXX need this for now as long as systemd-dissect can't detect btrfs @auto volumes
btrfs subvolume set-default 257 "$tmpmp"
read -r rootdev rootuuid < <(findmnt -nvo "SOURCE,UUID" $tmpmp)
mount -o subvol="@auto/${volume[root]}" "$rootdev" "$mp"
# root fs layout
mkdir -p "$mp"/{etc,proc,sys,dev,var,tmp,run,usr,efi,mnt}
for i in bin sbin lib lib64; do
	ln -s usr/$i "$mp/$i"
done
mount "${loop}p1" "$mp/efi"
mount -o subvol="@auto/${volume[usr]}" "$rootdev" "$mp/usr"
mount -o subvol="@auto/${volume[var]}" "$rootdev" "$mp/var"
for i in tmp log/journal; do
	mkdir -p "$mp/var/$i"
done
for i in root home opt srv; do
	mkdir -p "$mp/var/$i"
	ln -s var/$i "$mp/$i"
done

## prepare separate usr tree
#mkfs.btrfs -q "${loop}p3"
#mount "${loop}p3" "$mp/usr"
#btrfs subvolume create "$mp/usr/@auto/"
#btrfs subvolume create "$mp/usr/@auto/$osname@$rev+3"
## XXX is it really always 257? :-)
#btrfs subvolume set-default 257 "$mp/usr"
#umount "$mp/usr"
#mount "${loop}p3" "$mp/usr"
#

mkdir -p "$mp/usr/lib/sysimage"
mount -o subvol="@auto/${volume[sysimage]}" "$rootdev" "$mp/usr/lib/sysimage"
# XXX: need to change to sysimage/packages
mkdir -p "$mp/usr/lib/sysimage/rpm-headers"
rsync -a --chmod 444 --chown root:root "$packages"/extents/ "$mp/usr/lib/sysimage/rpm-headers/"
for i in "$mp/usr/lib/sysimage/rpm-headers"/*; do
	#echo "${i##*/}"
	echo -n .
	busybox rpm --root "$mp" --force --only-prefix /usr --justfs -i "$i"
done
echo
# XXX!
rm "$mp/usr/bin/rpm"
for i in wget rpm; do
	[ -e "$mp/usr/bin/$i" -o -L "$mp/usr/bin/$i" ] && continue
	ln -s busybox $mp/usr/bin/$i
done

# FIXME: no root dir option
rm -f "$mp/usr/lib/kernel/install.d/50-depmod.install"

### bootloader

ENTRY_TOKEN=opensuse-tumbleweed
#ENTRY_TOKEN=Default
# XXX: use entry token for newer systemd
#echo "MACHINE_ID=$ENTRY_TOKEN" > "$mp/usr/lib/kernel/install.conf"
mkdir -p "$mp/etc/kernel"
echo "$ENTRY_TOKEN" > "$mp/etc/kernel/entry-token"
#bootctl install --no-variables --install-source=image --make-entry-directory=yes --entry-token=os-id --root="$mp"
install -D -m 444 "$mp"/usr/lib/systemd/boot/efi/systemd-bootx64.efi "$mp/efi/EFI/BOOT/BOOTX64.EFI"
install -D -m 444 "$mp"/usr/lib/systemd/boot/efi/systemd-bootx64.efi "$mp/efi/EFI/systemd/systemd-bootx64.efi"
#
mkdir -p "$mp/efi/$ENTRY_TOKEN"
mkdir -p "$mp/efi/loader/entries"
for k in "$mp"/usr/lib/modules/*/vmlinuz; do
	kv="${k%/*}"
	kv="${kv##*/}"
#	kf="/$ENTRY_TOKEN/$kv/linux"
#	initrd="${kf%/*}/initrd"
#	install -D -m 444 "$k" "$mp/efi$kf"
#	cat > "$mp/efi/loader/entries/$ENTRY_TOKEN-$kv@$rev.conf" <<-EOF
#	title       openSUSE Tumbleweed@$rev
#	version     $kv
#	machine-id  $ENTRY_TOKEN
#	sort-key    $osname
#	# XXX rw because of boo#1156421 ?
#	options     root=UUID=$rootuuid rootflags=rw,subvol=@auto/${volume[root]} mount.usr=UUID=$rootuuid mount.usrflags=ro,subvol=@auto/${volume[usr]} console=tty0 console=ttyS0,115200 quiet
#	linux       $kf
#	initrd      $initrd
#	EOF

	# XXX: should read deps from /var
	systemd-nspawn -q -D "$mp" depmod $kv

	cat > "$mp/etc/dracut.conf" <<-EOF
	hostonly="no"
	hostonly_cmdline="no"
	add_drivers+=" btrfs "
	omit_dracutmodules+=" plymouth i18n network kernel-modules kernel-modules-extra multipath "
	stdloglvl="3"
	EOF
	echo "root=UUID=$rootuuid rootflags=rw,subvol=@auto/${volume[root]} mount.usr=UUID=$rootuuid mount.usrflags=ro,subvol=@auto/${volume[usr]} console=tty0 console=ttyS0,115200 quiet" > "$mp/etc/kernel/cmdline"

	systemd-nspawn -q -D "$mp" -ESNAPSHOT="$rev" -ESUBVOL="@auto/${volume[usr]}" kernel-install -v add "$kv" "${k#$mp}"
	rm "$mp/etc/kernel/cmdline"
done
systemd-nspawn -q -D "$mp" systemctl enable debug-shell.service
systemd-nspawn -q -D "$mp" systemctl enable systemd-resolved.service

#systemd.log_level=debug
#--add-drivers dmi-sysfs \
#--force-drivers dmi-sysfs \

tree "$mp/efi"

systemd-nspawn -q -D "$mp" busybox rpm -q systemd

# XXX
#cat /etc/resolv.conf > "$mp/etc/resolv.conf"

# XXX
grep -v '^\(passwd\|group\|shadow\)' "$mp/usr/etc/nsswitch.conf" > "$mp/etc/nsswitch.conf"
cat >> "$mp/etc/nsswitch.conf" <<-EOF
passwd:         compat systemd
group:          compat [SUCCESS=merge] systemd
shadow:         compat systemd
EOF

# firstboot wizard doesn't like empty etc? seems to be read-only
#: > "$mp/etc/machine-id"

#cat > "$mp/etc/systemd/system.conf" <<-EOF
#[Manager]
#LogLevel=debug
#EOF

mkdir -p "$mp/etc/systemd/system/systemd-sysusers.service.d"
cat > "$mp/etc/systemd/system/systemd-sysusers.service.d/override.conf" <<-EOF
[Service]
LoadCredential=passwd.hashed-password.systemd-timesync
LoadCredential=passwd.plaintext-password.systemd-timesync
EOF

mkdir -p "$mp/etc/systemd/network"
cat > "$mp/etc/systemd/network/80-dhcp.network" <<-EOF
[Match]
Name=en*

[Network]
DHCP=yes
EOF
mkdir -p "$mp/etc/systemd/system-preset/"
echo "enable systemd-networkd.service" > "$mp/etc/systemd/system-preset/50-networkd.preset"

cat >> "$mp/etc/fstab" <<-EOF
build-srcdir /mnt 9p trans=virtio,version=9p2000.L
EOF

cat > "$mp/root/.profile" <<-EOF
alias l='ls -al'
alias o='less'
EOF

# XXX: package
install -D -m 444 snapshots.sh "$mp/usr/lib/kernel/snapshots.sh"

install -D -m 555 subvol-mount-generator "$mp/usr/lib/systemd/system-generators/subvol-mount-generator"

install -D -m 555 updater "$mp/usr/bin/updater"

btrfs prop set -t s "$mp/usr" ro true
